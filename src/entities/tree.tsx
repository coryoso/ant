/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.15 tree.gltf -t -s 
*/

import { useGLTF } from "@react-three/drei"
import React from "react"
import * as THREE from "three"
import { GLTF } from "three-stdlib"

type GLTFResult = GLTF & {
	nodes: {
		Object_2: THREE.Mesh
	}
	materials: {
		material_0: THREE.MeshStandardMaterial
	}
}

type ContextType = Record<
	string,
	React.ForwardRefExoticComponent<JSX.IntrinsicElements["mesh"]>
>

export function Tree(props: JSX.IntrinsicElements["group"]) {
	const { nodes, materials } = useGLTF("/tree/tree.gltf") as GLTFResult
	return (
		<group {...props} dispose={null}>
			<mesh
				castShadow
				receiveShadow
				geometry={nodes.Object_2.geometry}
				material={materials.material_0}
			/>
		</group>
	)
}

useGLTF.preload("/tree/tree.gltf")
